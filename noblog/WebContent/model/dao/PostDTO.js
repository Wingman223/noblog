sap.ui.define([
	'model/dao/base/DTO',
	'model/dao/CommentDTO',
	'model/dao/Post'
], function (DTO, CommentDTO, Post) {
	"use strict";
	
	var PostDTO = DTO.extend("com.team6.noblog.model.dao.PostDTO", {
		
		// GETTER / SETTER
		// Mostly generated by the framework. Only the ones for local variables or
		// overridden getter / setter from the framework to alter the behavior ( readonly )
		
		// Getter
		
		getPost: function() {
			return this.getObject();
		},
		
		// Setter
		
		setPost: function(oPost) {
			this.setObject(oPost);
		},
		
		// ABSTRACT METHODS
		
		_checkDataObject: function(oObject) {
			return (oObject instanceof Post);
		},
		
		_mapServiceDataToDTO : function(oData) {
			// get important data from service
			var sTitle 			= oData["title"];
			var sContent 		= oData["content"];
			var oCreationDate 	= new Date(oData["creationDate"]);
			var oPost			= new Post(sTitle, oCreationDate, sContent);
			
			// pictureUrl is optional
			if( oData["pictureUrl"] ) {
				oPost.setPictureUrl(oData["pictureUrl"]);
			}
			
			// now create comments from data
			var sBasePath = this._oContext.getPath();
			var aComments = oData["comments"] || [];
			for( var i=0; i < aComments.length; i++ ) {
				var oComment = new CommentDTO();
				oComment.setModel(this._oModel, sBasePath + "/comments/" + i);
				
				oPost.addComment(oComment);
			}
			
			return oPost;
		},
		
		_mapDTOToServiceData: function(oPost) {
			
			if(this._checkDataObject(oPost)) {
				var oData = {
					title 		: oPost.getTitle(),
					creationDate: oPost.getCreationDate(),
					content		: oPost.getContent(),
					comments	: []
				};
				
				// pictureUrl is optional so we must check if it is filled
				var sPictureUrl = oPost.getPictureUrl();
				if( sPictureUrl.length > 0 ) {
					oData["pictureUrl"] = sPictureUrl;
				}
				
				// insert comments into the structure
				var aComments = oPost.getComments();
				for( var i=0; i<aComments.length; i++ ) {
					oData.comments.push(aComments[i].getServiceData());
				}
				
				return oData;
			} else {
				throw new Error("No post data available!");
			}
		}
	});
	
	return PostDTO;
});