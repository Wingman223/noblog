sap.ui.define([
	'model/dao/base/DTO',
	'model/dao/Comment',
	'model/dao/UserInlineDTO'
], function (DTO, Comment, UserInlineDTO) {
	"use strict";
	
	var CommentDTO = DTO.extend("com.team6.noblog.model.dao.CommentDTO", {
		
		// GETTER / SETTER
		// Mostly generated by the framework. Only the ones for local variables or
		// overridden getter / setter from the framework to alter the behavior ( readonly )
		
		// Getter
		
		getComment: function() {
			return this.getObject();
		},
		
		getUserInline: function() {
			return this.getObject().getUser();
		},
		
		// Setter
		
		setComment: function(oComment) {
			this.setObject(oComment);
		},
		
		// ABSTRACT METHODS
		
		_checkDataObject: function(oObject) {
			return (oObject instanceof Comment);
		},
		
		_onDataChanged: function(oEvent) {
			console.log("change");
		},
		
		_mapServiceDataToDTO: function(oData) {
			var sPath			= this.getPath();
			var oCreationDate 	= new Date(oData["creationDate"]);
			var sContent		= oData["content"];
			
			// map inline user
			var oUserInlineDTO 	= new UserInlineDTO();
			oUserInlineDTO.setModel(this._oModel, sPath);
			
			return new Comment(oUserInlineDTO, oCreationDate, sContent);
		},
		
		_mapDTOToServiceData: function(oComment) {
			if(this._checkDataObject(oComment)) {
				
				// Get comment and user data
				var oData = {
					content 		: oComment.getContent(),
					creationDate 	: oComment.getCreationDate()
				}
				var oUser = oComment.getUser().getServiceData();
				
				// Merge them together
				jQuery.extend(oData, oUser);
				
				return oData;
			} else {
				throw new Error("No comment data available!");
			}
		}
	});
	
	return CommentDTO;
});