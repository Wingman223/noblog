sap.ui.define([
	'model/dao/base/DTO',
	'model/dao/User',
	'model/dao/UserInline',
	'model/dao/UserInlineDTO'
], function (DTO, User, UserInline, UserInlineDTO) {
	"use strict";
	
	var UserDTO = DTO.extend("com.team6.noblog.model.dao.UserDTO", {
		
		// GETTER / SETTER
		// Mostly generated by the framework. Only the ones for local variables or
		// overridden getter / setter from the framework to alter the behavior ( readonly )
		
		// Getter
		
		getUser : function() {
			return this.getObject();
		},
		
		getUserInline: function() {
			var oUser = this.getUser();
			return oUser.getUserInline();
		},
		
		getUserInlineDTO : function() {
			var oUserInline 	= this.getUserInline();
			var oUserInlineDTO 	= new UserInlineDTO();
			oUserInlineDTO.setUserInline(oUserInline);
			
			return oUserInlineDTO;
		},
		
		// Setter
		
		setUser : function(oUser) {
			this.setObject(oUser);
		},
		
		// ABSTRACT METHODS
		
		_checkDataObject: function(oObject) {
			return (oObject instanceof User);
		},
		
		_mapServiceDataToDTO: function(oData) {
			
			var sUserid 	= oData["_id"];
			var sUsername 	= oData["name"];
			var sType 		= oData["type"];
			var sPrename 	= oData["prename"];
			var sSurname 	= oData["surname"];
			var sEmail		= oData["email"];
			var aRoles		= oData["roles"]
			// after first commit of the password, we will only get it as a salt hash
			var sPassword	= oData["salt"];
			
			return new User(sUsername, sPassword, sPrename, sSurname, sEmail, aRoles);
		},
		
		_mapDTOToServiceData: function(oUser) {
			if(this._checkDataObject(oUser)) {
				// Full for registration or other purposes
				return  {
					_id 	: oUser.getUserid(),
					type 	: oUser.getType(),
					name 	: oUser.getUsername(),
					surname : oUser.getSurname(),
					prename	: oUser.getPrename(),
					email	: oUser.getEmail(),
					roles	: oUser.getRoles(),
					password: oUser.getPassword()
				}
			} else {
				throw new Error("No user data available!");
			}
		}
	});
	
	return UserDTO;
});