sap.ui.define([
	'model/dao/base/DTO',
	'model/dao/Blog',
	'model/dao/PostDTO',
	'model/dao/UserDTO',
], function (DTO, Blog, PostDTO, UserDTO) {
	"use strict";
	
	var BlogDTO = DTO.extend("com.team6.noblog.model.dao.BlogDTO", {
		metadata : {
			events : {
				// event for callback when blog data is available
				dataLoaded : {
					
				}
			}
		},
		
		_oBlog		: null,
		
		constructor: function(oModel) {
			DTO.prototype.constructor.apply(this, [oModel, "/"]);
			
			// attach model event
			this._oModel.attachRequestCompleted(this._mapServiceDataToDTO, this);
		},
		
		// GETTER / SETTER
		// Mostly generated by the framework. Only the ones for local variables or
		// overridden getter / setter from the framework to alter the behavior ( readonly )
		
		getBlog: function() {
			return this._oBlog;
		},
		
		getUser: function() {
			return this._oBlog.getUser();
		},
		
		getPost: function(sPath) {
			return this._oBlog.getPost(sPath);
		},
		
		// PROCESSING
		
		_onBlogDataChanged: function(oEvent) {
			console.log("change");
		},
		
		_parseDataInModelContext: function(oEvent) {
			var bSuccess = oEvent.getParameter("success");
			if( bSuccess ) {
				var oData = this._oModel.getData();
				var oBlog = this._mapServiceDataToBlogDTO(oData, oBlog);
				
				oBlog.attachChange(this._onBlogDataChanged, this);
				
				/*
				var oParsedData = this._mapBlogDTOToServiceData();
				console.log(oData);
				console.log(oParsedData);
				*/
			} else {
				console.warn("Failed to load blog data!");
			}
		},
		
		_mapServiceDataToDTO: function(oData) {
			
			var oUserDTA		= new UserDTA(oModel, sPath);
			var oPostDTA		= new PostDTA(oModel, sPath);
			
			var sId				= oData["_id"];
			var sTitle			= oData["title"];
			var sType			= oData["type"];
			var sCreationDate 	= new Date(oData["creationDate"]);
			
			var oBlog 			= new Blog(sId, sTitle, oCreationDate);
			
			// map userid and username to user DTO
			var oUser = new User();
			oUser.setUserData(oData);
			this.setAggregation("user"		, oUser);
			
			// map posts to post DTO
			var aPosts = oData["posts"];
			for( var i=0; i<aPosts.length; i++ ) {
				this.addAggregation("posts", new Post(aPosts[i]))
			}
		},
		
		_mapDTOToServiceData: function() {
			// Get blog and user data
			var oData = {
				_id 			: this.getBlogid(),
				type			: this.getType(),
				title			: this.getTitle(),
				creationDate	: this.getCreationDate(),
				posts			: []
			};
			var oUser 	= this.getUser().getServiceData();
			
			// Merge them together
			jQuery.sap.extend(oData, oUser);
			
			// Add posts afterwards
			var aPosts 	= this.getPosts();
			for( var i=0; i<aPosts.length; i++ ) {
				oData.posts.push(aPosts[i].getServiceData());
			}
			
			return oData;
		}
	});
	
	return BlogDTO;
});